command /요리셋팅:
	permission: op
	trigger:
		set {beehive_waffle} to ItemsAdder.getCustomItem("magicfood:beehive_waffle")
		set {sunroot_pancake} to ItemsAdder.getCustomItem("magicfood:sunroot_pancake")
		set {wave_ricebowl} to ItemsAdder.getCustomItem("magicfood:wave_ricebowl")
		set {sea_pudding} to ItemsAdder.getCustomItem("magicfood:sea_pudding")
		set {snowflake_toast} to ItemsAdder.getCustomItem("magicfood:snowflake_toast")
		set {skewer_dessert} to ItemsAdder.getCustomItem("magicfood:skewer_dessert")
		set {lightning_macaron} to ItemsAdder.getCustomItem("magicfood:lightning_macaron")
		set {cloud_souffle} to ItemsAdder.getCustomItem("magicfood:cloud_souffle")
		set {amethyst_ade} to ItemsAdder.getCustomItem("magicfood:amethyst_ade")
		set {spirit_ore_set} to ItemsAdder.getCustomItem("magicfood:spirit_ore_set")
		set {cannon_lunchbox} to ItemsAdder.getCustomItem("magicfood:cannon_lunchbox")
		set {shield_porkbelly} to ItemsAdder.getCustomItem("magicfood:shield_porkbelly")
		set {blue_cookie} to ItemsAdder.getCustomItem("magicfood:blue_cookie")
		set {giant_riceball} to ItemsAdder.getCustomItem("magicfood:giant_riceball")
		set {golden_cheeseball} to ItemsAdder.getCustomItem("magicfood:golden_cheeseball")
		set {lava_hotpot} to ItemsAdder.getCustomItem("magicfood:lava_hotpot")
		set {crack_candy} to ItemsAdder.getCustomItem("magicfood:crack_candy")
		set {core_butter_grill} to ItemsAdder.getCustomItem("magicfood:core_butter_grill")
		set {black_seasoning} to ItemsAdder.getCustomItem("magicfood:black_seasoning")
		set {fine_powder} to ItemsAdder.getCustomItem("magicfood:fine_powder")
		set {void_fragment} to ItemsAdder.getCustomItem("magicfood:void_fragment")
		set {cloud_butter} to ItemsAdder.getCustomItem("magicfood:cloud_butter")
		set {cloud_cottoncandy} to ItemsAdder.getCustomItem("magicfood:cloud_cottoncandy")
		set {copper_rice} to ItemsAdder.getCustomItem("magicfood:copper_rice")
		set {copper_pan} to ItemsAdder.getCustomItem("magicfood:copper_pan")
		set {gold_powder} to ItemsAdder.getCustomItem("magicfood:gold_powder")
		set {snowflake_ice} to ItemsAdder.getCustomItem("magicfood:snowflake_ice")
		set {honey} to ItemsAdder.getCustomItem("magicfood:honey")
		set {gem_salt} to ItemsAdder.getCustomItem("magicfood:gem_salt")
		set {frozen_herb} to ItemsAdder.getCustomItem("magicfood:frozen_herb")
		set {frozen_meat} to ItemsAdder.getCustomItem("magicfood:frozen_meat")
		set {essence_of_light} to ItemsAdder.getCustomItem("magicfood:essence_of_light")
		set {fish_meat} to ItemsAdder.getCustomItem("magicfood:fish_meat")
		set {frost_horn_powder} to ItemsAdder.getCustomItem("magicfood:frost_horn_powder")
		set {crystal_juice} to ItemsAdder.getCustomItem("magicfood:crystal_juice")
		set {timefruit} to ItemsAdder.getCustomItem("magicfood:timefruit")
		set {deepsea_gelatin} to ItemsAdder.getCustomItem("magicfood:deepsea_gelatin")
		set {dark_meat} to ItemsAdder.getCustomItem("magicfood:dark_meat")
		set {lava_sauce} to ItemsAdder.getCustomItem("magicfood:lava_sauce")
		set {cry_seed} to ItemsAdder.getCustomItem("magicfood:cry_seed")
		set {sound_herb} to ItemsAdder.getCustomItem("magicfood:sound_herb")
		set {jungle_spice} to ItemsAdder.getCustomItem("magicfood:jungle_spice")
		set {amplified_rice} to ItemsAdder.getCustomItem("magicfood:amplified_rice")
		set {hell_meat} to ItemsAdder.getCustomItem("magicfood:hell_meat")
		set {vacuum_sugar} to ItemsAdder.getCustomItem("magicfood:vacuum_sugar")
		set {sky_crystal} to ItemsAdder.getCustomItem("magicfood:sky_crystal")
		set {blue_sauce} to ItemsAdder.getCustomItem("magicfood:blue_sauce")
		set {core} to ItemsAdder.getCustomItem("magicfood:core")
		set {sunlight_root} to ItemsAdder.getCustomItem("magicfood:sunlight_root")
		set {sky_snack} to ItemsAdder.getCustomItem("magicfood:sky_snack")
		set {seaweed_powder} to ItemsAdder.getCustomItem("magicfood:seaweed_powder")
		set {gunpowder_spice} to ItemsAdder.getCustomItem("magicfood:gunpowder_spice")
		set {flame_vegetable} to ItemsAdder.getCustomItem("magicfood:flame_vegetable")	

command /요리:
	permission: op
	trigger:
		set {_cookGUI} to chest inventory with 6 rows named ":offset_-8::recipe:"	

		##요리 레시피##
		set slot 10 of {_cookGUI} to {salad} named "&a&l샐러드" with lore "&7=== 필요 재료 ===" and "&f- 토마토 &ex1" and "&f- 양배추 &ex1"

		##다른 요리들##

		open {_cookGUI} to player

on inventory click:
	if name of event-inventory is ":offset_-8::recipe:":

		set {_cookingGUI} to chest inventory with 6 rows named ":offset_-8::cook:"
		set slot 39 of {_cookingGUI} to {voidItem} named "&a요리 시작"
		set slot 41 of {_cookingGUI} to {voidItem} named "&c요리 취소"

		set {_i} to 28
		while {_i} < 35:
			set slot {_i} of {_cookingGUI} to gray stained glass pane named "&f"
			add 1 to {_i}	

		cancel event

		clicked slot is 10:
			set slot 13 of {_cookingGUI} to {salad} named "&a&l샐러드"
			if check [player has 1 of {tomato}]->[player has 1 of {cabage}]:
				set {nowCook::%player%} to {salad}
				open {_cookingGUI} to player
			else:
				send "&c재료가 부족합니다." to player
				play sound "block.note_block.bass" with pitch 0.5 to player


		##다른 음식들##

	if name of event-inventory is ":offset_-8::cook:":
		cancel event

		clicked slot is 39:
			if {isNowCooking::%player%} is not set:
				if check [player has 1 of {tomato}]->[player has 1 of {cabage}]:
					set {isNowCooking::%player%} to true
					remove 1 of {tomato} from player
					remove 1 of {cabage} from player
					add {tomato} to {useCook::%player%::*}
					add {cabage} to {useCook::%player%::*}
					Cooking(player)
				else:
					send "&c재료가 부족합니다." to player
					play sound "block.note_block.bass" with pitch 0.5 to player
			else:
				send "&c이미 요리 중입니다." to player

		clicked slot is 41:
			delete {isNowCooking::%player%}
			send "&c요리가 취소되었습니다." to player
			close player's inventory
			set {stopCook::%player%} to true
			

on inventory close:
	if name of event-inventory is ":offset_-8::cook:":
		if check [{isNowCooking::%player%} is set]->[{stopCook::%player%} is not set]:
			wait 1 tick
			open event-inventory to player
			send "&c요리 진행 중에는 인벤토리를 닫을 수 없습니다." to player


	if name of event-inventory is ":offset_-8::finish_cook:":
		set {_backItem} to item in slot 4 of event-inventory
		if {_backItem} is not air:
			if player's inventory can hold {_backItem}:
				give {_backItem} to player
			else:
				send "&c인벤토리에 공간이 없어 아이템을 받을 수 없었습니다. 관리자에게 문의하세요." to player
				send "&7[관리모드] &6&l[요리] &e%player% &f사라진 아이템 : %{_backItem}%" to console


function Cooking(player: player):
	send "&a요리 진행 중..." to {_player}

	set {_i} to 28
	set {_w} to 1
	while {_i} < 35:
		set {_neww} to "%{_w}% seconds" parsed as timespan
		wait {_neww}
		set slot {_i} of {_player}'s current inventory to lime stained glass pane named "&f"
		

		if {stopCook::%{_player}%} is true:
			loop {useCook::%{_player}%::*}:
				give loop-value to {_player}
			delete {nowCook::%{_player}%}
			delete {useCook::%{_player}%::*}
			delete {stopCook::%{_player}%}
			wait 1 tick
			stop

		play sound "block.brewing_stand.brew" with pitch 1 to {_player}
		add 1 to {_i}

	delete {useCook::%{_player}%::*}
	delete {isNowCooking::%{_player}%}
	
	set {_giveCook} to chest inventory with 1 rows named ":offset_-8::finish_cook:"
	play sound "entity.experience_orb.pickup" with pitch 1.2 to {_player}
	set slot 4 of {_giveCook} to {nowCook::%{_player}%}
	open {_giveCook} to {_player}

	send "&7[관리모드] %{_player}%님이 요리를 완성했습니다. 완성된 요리: %{nowCook::%{_player}%}%" to console
	delete {nowCook::%{_player}%}
	
	
